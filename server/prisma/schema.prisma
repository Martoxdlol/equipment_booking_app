// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-dart"
    previewFeatures = ["interactiveTransactions"]
}

// datasource db {
//     provider = "sqlite"
//     url      = "file:./prisma/prisma.db"
// }

datasource db {
    provider = "postgresql"
    url      = "postgresql://root:root@10.0.20.3:15432/equipment_booking_app?schema=public"
}

model SignInIntent {
    key String @id @unique
}

model Session {
    key     String @id @unique
    user    User   @relation(fields: [user_id], references: [id])
    user_id String
}

model User {
    id       String             @id @unique
    email    String             @unique
    name     String
    requests EquipmentRequest[]
    sessions Session[]
}

model EquipmentRequest {
    id           Int           @id @default(autoincrement())
    requested_by User          @relation(fields: [requester_id], references: [id])
    requester_id String
    items        RequestItem[]
    notes        String        @default("")
    time_start   DateTime
    time_end     DateTime
    asset        Asset[]
    createdAt    DateTime      @default(now())
}

model RequestItem {
    id            Int              @id @default(autoincrement())
    request       EquipmentRequest @relation(fields: [request_id], references: [id])
    request_id    Int
    quantity      Int
    asset_type    AssetType        @relation(fields: [asset_type_id], references: [id])
    asset_type_id String
}

model AssetType {
    id          String        @id @unique
    title       String
    assets      Asset[]
    unique      Boolean       @default(true)
    quantity    Int?
    RequestItem RequestItem[]
}

model Asset {
    id             String            @id @unique
    type           AssetType         @relation(fields: [type_id], references: [id])
    type_id        String
    deployed_to    EquipmentRequest? @relation(fields: [deployed_to_id], references: [id])
    deployed_to_id Int?
}

model FutureActionEvent {
    id           Int       @id @default(autoincrement())
    user_id      String
    user_email   String
    type         String
    details      String?
    created_at   DateTime  @default(now())
    completed_at DateTime? @default(now())
}
